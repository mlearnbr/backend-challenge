INSTRUCOES PARA RODAR O PROJETO


criar o arquivo .env ,apartir do env.example

#url do front datatable
http://localhost:8006/front

#rodar e subir os containers docker
docker-compose  build
docker-compose  up -d

#Entrar no container docker
docker exec -it CONTAINER_ID bash

#Dentro do container, executar os comandos abaixo
composer install
composer update
php artisan migrate

#Ou fora do container
docker exec formulario_app_1 composer install
docker exec formulario_app_1 composer update
docker exec formulario_app_1 php artisan migrate


#opcional, gera 1 registro
php artisan db:seed

#rodar os tests
php artisan test






## Commands Laravel
php artisan make:controller TestController --resource
php artisan make:model Test -mcr
php artisan migrate:freshh --seed
php artisan make:factory BlogFactory --model=Blog
php artisan make:seed TesteSeeder
php artisan db:seed --class=UserTableSeeder (executar seed individual)
php artisan db:seed (todas seeds)
php artisan make:resource TestResource
php artisan make:request TestResource
php artisan make:test UserTest

#mysq in worbranch
docker ps
docker exec -it CONTAINER_MYSQL bash
mysql -u root -p

create user 'user'@'%' identified by 'pass';
grant all privileges on *.* to 'user'@'%' with grant option;
flush privileges;

select host, user from mysql.user;


#tinker
Checar conexao
php artisan tinker
DB::connection()->getPdo();
DB::connection()->getDatabaseName();
$p = App\Models\User::find(1);
$p = App\Models\User::all();

#docker
docker-compose  build
docker-compose  up -d
docker-compose  down
docker-compose  restart
docker exec -it CONTAINER_ID bash

# config jwt
composer require tymon/jwt-auth dev-develop
add PROVIDER: Tymon\JWTAuth\Providers\LaravelServiceProvider::class,
public config: php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"
php artisan jwt:secret
model User:  implements JWTSubject
config/auth
php artisan make:middleware apiProtectedRoute
http/kernel.php
 'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
        'jwt.auth' => 'Tymon\JWTAuth\Middleware\GetUserFromToken',
        'jwt.refresh' => 'Tymon\JWTAuth\Middleware\RefreshToken',
        'apiJwt' => \App\Http\Middleware\ApiProtectedRoute::class,

app/providers/appserviceprovider => config repository/services
