version: '3'
services:
  #PHP Container
  app:
    image: devilbox/php-fpm:8.1-mods
    container_name: qualifica-app
    tty: true
    user: "devilbox:devilbox"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - database
    networks:
      - app-network

  #Nginx Container
  webserver:
    image: nginx:alpine
    container_name: qualifica-webserver
    tty: true
    working_dir: /var/www
    environment:
      APP_HOST: qualifica-app
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./.docker/nginx/app.template:/etc/nginx/app.template
      - ./.docker/nginx/conf.sh:/etc/nginx/conf.sh
    depends_on:
      - app
    entrypoint:
      - /etc/nginx/conf.sh
    command: nginx -g 'daemon off;'
    networks:
      - app-network

  #Node Container
  node:
    image: node:slim
    container_name: qualifica-node
    tty: true
    user: "node:node"
    working_dir: /var/www
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www
    networks:
      - app-network

  #MySQL Container
  database:
    image: mariadb:10.3-bionic
    container_name: qualifica-database
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: qualifica
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql/
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #PhpMyAdmin Container
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: qualifica-phpmyadmin
    environment:
      PMA_HOST: qualifica-database
      PMA_USER: root
      PMA_PASSWORD: secret
      UPLOAD_LIMIT: 1000M
    volumes:
      - ./.docker/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
      - ./.docker/phpmyadmin/php/php-phpmyadmin.ini:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    ports:
      - "8081:80"
    depends_on:
      - database
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
